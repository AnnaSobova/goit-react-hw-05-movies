{"version":3,"file":"static/js/868.0911266f.chunk.js","mappings":"mTAEMA,EAAM,mCAEZC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,WAAMC,GAAN,uFACNF,EAAAA,EAAAA,IAAA,sCACYD,EADZ,iBACwBG,IAFlB,cACvBC,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOjBC,EAAe,mCAAG,WAAOH,EAAMI,GAAb,uFACJN,EAAAA,EAAAA,IAAA,+BACGD,EADH,kBACgBO,EADhB,iBAC8BJ,IAF1B,cACrBK,EADqB,yBAIpBA,EAASH,MAJW,2CAAH,wDAOfI,EAAe,mCAAG,WAAMC,GAAN,uFACJT,EAAAA,EAAAA,IAAA,gBACVS,EADU,oBACIV,EADJ,oBADI,cACrBI,EADqB,yBAIrBA,GAJqB,2CAAH,sDAOdO,EAAe,mCAAG,WAAMD,GAAN,uFACLT,EAAAA,EAAAA,IAAA,iBACTS,EADS,4BACaV,EADb,oBADK,cACtBI,EADsB,yBAIrBA,EAASC,KAAKO,MAJO,2CAAH,sDAOhBC,EAAe,mCAAG,WAAMH,GAAN,uFACJT,EAAAA,EAAAA,IAAA,gBACZS,EADY,4BACUV,EADV,2BADI,cACrBQ,EADqB,yBAIpBA,EAASH,KAAKS,SAJM,2CAAH,qD,sGChCfC,E,QAAmBC,EAAAA,IAAH,uG,2DCmF7B,EA5EgB,WAAK,IAAD,IAChB,GAAyBC,EAAAA,EAAAA,UAAS,CAAC,GAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA2BF,EAAAA,EAAAA,WAAS,GAApC,eAAOG,EAAP,KAAeC,EAAf,KACOC,GAAWC,EAAAA,EAAAA,MAAXD,QAGDE,EAAQ,qBADEC,EAAAA,EAAAA,MACUC,aAAZ,aAAG,EAAgBC,YAAnB,QAAyB,KAEtCC,EAAAA,EAAAA,YAAU,YACPnB,EAAAA,EAAAA,IAAgBa,GAASO,MAAK,SAAAC,GAC1BX,EAASW,EAAOzB,MAChBgB,GAAU,EACb,GACH,GAAC,CAACC,IAEH,IAAQS,EACRb,EADQa,MAAOC,EACfd,EADec,YAAaC,EAC5Bf,EAD4Be,aAAcC,EAC1ChB,EAD0CgB,WAAYC,EACtDjB,EADsDiB,SAAUC,EAChElB,EADgEkB,OAE1DC,EAAQ,yCAAqCL,GAC7CM,EAAc,IAAIC,KAAKN,GAAcO,cAC3C,OACG,2BACKpB,GACG,iCACA,UAAC,KAAD,CAAMqB,GAAKjB,EAAX,WACI,SAAC,MAAD,CAAakB,KAAK,OADtB,WAIA,UAAC3B,EAAD,YACI,gBAAK4B,IAAKN,EAAUO,MAAM,MAAMC,IAAKd,KACrC,4BACI,0BACKA,EADL,KACcO,EADd,QAGA,yCAAiBQ,KAAKC,MAAMb,GAA5B,QACA,uCACA,uBAAIC,KACJ,mCACCC,EAAOY,KAAI,SAAAC,GACR,OAAO,6BAAsBA,EAAMC,OAAlBD,EAAMvC,GAC1B,WAGT,mBACA,oDACA,2BACI,yBACI,SAAC,KAAD,CAAM+B,GAAI,OAAOf,MAAO,CAACC,KAAKH,GAA9B,qBAIJ,yBACI,SAAC,KAAD,CAAMiB,GAAK,UAAUf,MAAO,CAACC,KAAMH,GAAnC,2BAKR,sBAGJ,SAAC,KAAD,CACA2B,OAAO,KACPP,MAAM,KACNQ,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,KAIT,SAAC,KAAD,MAGX,C","sources":["components/services/getApi.jsx","components/MovieDetailsItem/MovieDetailsItem.styled.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst KEY = '3fcb05b829685e6a45bc9aa7307d9bc9';\n\naxios.defaults.baseURL = \"https://www.themoviedb.org/3\";\n\nexport const getTrendsOfMovies = async page=>{\n    const responce = await axios.get(\n        `/trending/movie/day?api_key=${KEY}&page=${page}`\n    );\n    return responce.data \n};\n\nexport const getMoviesSearch = async (page, query) => {\n    const response = await axios.get(\n      `search/movie?api_key=${KEY}&query=${query}&page=${page}`\n    );\n    return response.data;\n  };\n\nexport const getMovieDetails = async id=>{\n    const responce = await axios.get(\n        `movie/${id}?api_key=${KEY}&language=en-US`\n    );\n   return responce;\n}\n\nexport const  getMovieCredits = async id=>{\n    const responce = await axios.get(\n        `/movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n    return responce.data.cast;\n};\n\nexport const getMovieRewiews = async id => {\n    const response = await axios.get(\n      `movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  };\n","import styled from '@emotion/styled';\n\nexport const MovieDetailsItem = styled.div`\n    display:flex;\n    gap:10px;\n    &>div{\n        max-width:400px;\n    }\n`;","import {getMovieDetails} from '../components/services/getApi';\nimport {MovieDetailsItem} from '../components/MovieDetailsItem/MovieDetailsItem.styled';\nimport {useState, useEffect} from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport {ThreeDots} from 'react-loader-spinner';\nimport { Link } from 'react-router-dom';\nimport { TiArrowLeft } from \"react-icons/ti\";\n\n\nconst MovieInfo=()=>{\n    const [movie, setMovie]= useState({});\n    const [isLoad, setIsLoad]= useState(false);\n    const {movieId} = useParams();\n   \n    const location =useLocation();\n    const backLink = location.state?.from??'/';\n  \n     useEffect(()=>{\n        getMovieDetails(movieId).then(result=>{\n            setMovie(result.data);\n            setIsLoad(true);\n        });\n     },[movieId]);\n\n     const { title, poster_path, release_date, popularity, overview, genres } =\n     movie;\n     const imageURL = `https://image.tmdb.org/t/p/w500${poster_path}`;\n     const releaseYear = new Date(release_date).getFullYear();\n     return(\n        <div>\n            {isLoad?(\n                <>\n                <Link to ={backLink}>\n                    <TiArrowLeft size=\"10\"/>\n                    Back\n                </Link>\n                <MovieDetailsItem>\n                    <img src={imageURL} width='300' alt={title}/>\n                    <div>\n                        <h1>\n                            {title} ({releaseYear})\n                        </h1>\n                        <h2>Popularity: {Math.round(popularity)} </h2>\n                        <h2>Owerview </h2>\n                        <p>{overview}</p>\n                        <h2>Genres</h2>\n                        {genres.map(genre =>{\n                            return <p key = {genre.id}> {genre.name}</p>;\n                        })}\n                    </div>\n                </MovieDetailsItem>\n                <hr/>\n                <p> Additional information</p>\n                <ul>\n                    <li>\n                        <Link to ='cast' state={{from:backLink}}>\n                            Cast\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to = \"reviews\" state={{from: backLink}}>\n                            Reviews\n                        </Link>\n                    </li>\n                </ul>\n                <hr/>\n                </>\n            ):(\n            <ThreeDots \n            height=\"80\" \n            width=\"80\" \n            radius=\"9\"\n            color=\"#d7c62a\" \n            ariaLabel=\"three-dots-loading\"\n            wrapperStyle={{}}\n            wrapperClassName=\"\"\n            visible={true}\n             />\n            \n            )}\n            <Outlet/>\n        </div>\n     );\n};\n\nexport default MovieInfo;"],"names":["KEY","axios","getTrendsOfMovies","page","responce","data","getMoviesSearch","query","response","getMovieDetails","id","getMovieCredits","cast","getMovieRewiews","results","MovieDetailsItem","styled","useState","movie","setMovie","isLoad","setIsLoad","movieId","useParams","backLink","useLocation","state","from","useEffect","then","result","title","poster_path","release_date","popularity","overview","genres","imageURL","releaseYear","Date","getFullYear","to","size","src","width","alt","Math","round","map","genre","name","height","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible"],"sourceRoot":""}