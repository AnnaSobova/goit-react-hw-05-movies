{"version":3,"file":"static/js/164.7925cf04.chunk.js","mappings":"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","sources":["components/LoadMoreButton/LoadMoreButton.jsx","components/services/getApi.jsx","components/SearchForm/SearchForm.jsx","components/GalleryList/MovieGallery.jsx","pages/Movies.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nconst LoadMoreButton=({onClick})=>{\n    return (\n        <button type=\"button\" onClick={onClick}>\n         Load more\n        </button>\n    );\n};\n\nexport default LoadMoreButton;\n\nLoadMoreButton.propTypes = {\n    onClick:PropTypes.func.isRequired,\n};\n","import axios from \"axios\";\naxios.defaults.baseURL = \"https://www.themoviedb.org/3\";\nconst KEY = '3fcb05b829685e6a45bc9aa7307d9bc9';\n\nexport const getTrendsOfMovies = async page=>{\n    const responce = await axios.get(\n        `trending/movie/day?api_key=${KEY}&page=${page}`\n    );\n    return responce.data \n};\n\nexport const getMoviesSearch = async (page, query) => {\n    const response = await axios.get(\n      `search/movie?api_key=${KEY}&query=${query}&page=${page}`\n    );\n    return response.data;\n  };\n\nexport const getMovieDetails = async id=>{\n    const responce = await axios.get(\n        `movie/${id}?api_key=${KEY}&language=en-US`\n    );\n   return responce;\n}\n\nexport const  getMovieCredits = async id=>{\n    const responce = await axios.get(\n        `movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n    return responce.data.cast;\n};\n\nexport const getMovieRewiews = async id => {\n    const response = await axios.get(\n      `movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  };\n","import{ Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\n\nconst schema = Yup.object().shape({\n    movieSearch: Yup.string()\n        .min(3, 'Too short name!')\n        .max(20, 'Too long name!')\n        .required(),\n    \n});\nexport const SearchForm =({onSubmit})=>{\n    return(\n        <Formik\n        initialValues={{movieSearch:''}}\n        onSubmit={onSubmit}\n        validatorSchema={schema}\n       >\n        {({errors,touched})=>(\n            <Form>\n                <Field name=\"movieSearch\">\n                  {errors.movieSearch&& touched.movieSearch?(\n                    <div>{errors.movieSearch}</div>\n                  ):null}\n                </Field>\n                <button type=\"submit\"> Search </button>\n            </Form>\n        )}\n       </Formik>\n    );\n};\n\nSearchForm.propType ={\n    onSubmit:PropTypes.func.isRequired,\n};\n","import {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MovieGallery =({movies,state})=>{\n    return(\n        <ul>\n            {movies.map(movie=>{\n                const{title,id}=movie;\n                return(\n                    <li key={id}>\n                        <Link to={`${id}`}state={state}> {title}\n                        </Link>\n                    </li>\n                );\n            })}\n        </ul>\n    );\n};\nexport default MovieGallery;\n\nMovieGallery.propType={\n    state: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    title:PropTypes.string.isRequired,\n};","import { SearchForm } from \"components/SearchForm/SearchForm\";\nimport MovieGallery from \"components/GalleryList/MovieGallery\";\nimport LoadMoreButton from \"components/LoadMoreButton/LoadMoreButton\";\nimport {useState, useEffect} from 'react';\nimport {getMoviesSearch} from '../components/services/getApi';\nimport { useSearchParams, useLocation } from \"react-router-dom\";\n\nexport const Movies = ()=>{\n    const [page,setPage]= useState(1);\n    const[searchParams, setSearchParams]= useSearchParams();\n    const[movies,setMovies]=useState([]);\n    const [total,settotal]= useState(0);\n    const[searchQuery,setSearchQuery]= useState('');\n\n    const query = searchParams.get('query');\n    const location = useLocation();\n\n    useEffect(()=>{\n        if(!query){\n            return;\n        }\n        if(searchQuery!== query){\n            setMovies([]);\n        }\n\n        getMoviesSearch(page, query).then(data=>{\n            setMovies(prevState=>[...prevState,...data.results]);\n            settotal(data.total_pages);\n            setSearchQuery(query);\n        });\n\n    },[query,page,searchQuery]);\n\n    const handleSubmitForm = query=>{\n        setPage(1);\n        settotal(0);\n        setSearchParams({query: query.searchMovie});\n    }\n\n     const handleLoadMoreButton = () =>{\n        setPage(prevState=> prevState+1);\n     };\n\n     return(\n        <>\n        <SearchForm onSubmit={handleSubmitForm}/>\n        {movies.length>0&&(\n            <>\n            <MovieGallery  movies={movies} state={{from:location}}/>\n            {total!== page &&<LoadMoreButton onClick={handleLoadMoreButton}/>}\n            </>\n        )}\n        </>\n     );\n};"],"names":["onClick","type","axios","KEY","getTrendsOfMovies","page","responce","data","getMoviesSearch","query","response","getMovieDetails","id","getMovieCredits","cast","getMovieRewiews","results","schema","Yup","shape","movieSearch","min","max","required","SearchForm","onSubmit","initialValues","validatorSchema","errors","touched","name","propType","PropTypes","MovieGallery","movies","state","map","movie","title","to","Movies","useState","setPage","useSearchParams","searchParams","setSearchParams","setMovies","total","settotal","searchQuery","setSearchQuery","get","location","useLocation","useEffect","then","prevState","total_pages","searchMovie","length","from","LoadMoreButton"],"sourceRoot":""}