{"version":3,"file":"static/js/164.1666201b.chunk.js","mappings":"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","sources":["components/LoadMoreButton/LoadMoreButton.jsx","components/services/getApi.jsx","components/SearchForm/SearchForm.jsx","components/GalleryList/MovieGallery.jsx","pages/Movies.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nconst LoadMoreButton=({onClick})=>{\n    return (\n        <button type=\"button\" onClick={onClick}>\n         Load more\n        </button>\n    );\n};\n\nexport default LoadMoreButton;\n\nLoadMoreButton.propTypes = {\n    onClick:PropTypes.func.isRequired,\n};\n","import axios from \"axios\";\n\nconst KEY = '3fcb05b829685e6a45bc9aa7307d9bc9';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendsOfMovies = async (page, signal)=>{\n    const responce = await axios.get(\n        `/trending/movie/day?api_key=${KEY}&page=${page}`,\n       { signal }\n    );\n    return responce.data \n};\n\nexport const getMoviesSearch = async (page, query) => {\n    const response = await axios.get(\n      `search/movie?api_key=${KEY}&query=${query}&page=${page}`\n    );\n    return response.data;\n  };\n\nexport const getMovieDetails = async id=>{\n    const responce = await axios.get(\n        `movie/${id}?api_key=${KEY}&language=en-US`\n    );\n   return responce;\n}\n\nexport const  getMovieCredits = async id=>{\n    const responce = await axios.get(\n        `/movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n    return responce.data.cast;\n};\n\nexport const getMovieRewiews = async id => {\n    const response = await axios.get(\n      `movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  };\n","import{ Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\n\nconst schema = Yup.object().shape({\n    movieSearch: Yup.string()\n        .min(3, 'Too short name!')\n        .max(20, 'Too long name!')\n        .required(),\n    \n});\nconst SearchForm = ({ onSubmit, initialSearchValue = '' }) => {\n\n    return(\n        <Formik\n        initialValues={{ movieSearch: initialSearchValue }}\n        onSubmit={onSubmit}\n        validatorSchema={schema}\n       >\n        {({errors,touched})=>(\n            <Form>\n                <Field name=\"movieSearch\">\n                  {errors.movieSearch&& touched.movieSearch?(\n                    <div>{errors.movieSearch}</div>\n                  ):null}\n                </Field>\n                <button type=\"submit\"> Search </button>\n            </Form>\n        )}\n       </Formik>\n    );\n};\nexport default SearchForm;\n\nSearchForm.propType ={\n    onSubmit:PropTypes.func.isRequired,\n};\n\n","import {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MovieGallery =({movies,state})=>{\n    return(\n        <ul>\n            {movies.map(movie=>{\n                const{title,id}=movie;\n                return(\n                    <li key={id}>\n                        <Link to={`${id}`}state={state}> {title}\n                        </Link>\n                    </li>\n                );\n            })}\n        </ul>\n    );\n};\nexport default MovieGallery;\n\nMovieGallery.propType={\n    state: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    title:PropTypes.string.isRequired,\n};","\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport MovieGallery from 'components/GalleryList/MovieGallery';\nimport LoadMoreButton from 'components/LoadMoreButton/LoadMoreButton';\nimport { useState, useEffect } from 'react';\nimport { getMoviesSearch } from '../components/services/getApi';\nimport { useSearchParams, useLocation } from 'react-router-dom';\n\nconst Movies = () => {\n  const [page, setPage] = useState(1);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [total, settotal] = useState(0);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const query = searchParams.get('query');\n  const location = useLocation();\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    if (!query) {\n      return () => {\n        controller.abort();\n      };\n    }\n    if (searchQuery !== query) {\n      setMovies([]);\n    }\n\n    getMoviesSearch(page, query, signal)\n      .then(data => {\n        setMovies(prevState => [...prevState, ...data.results]);\n        settotal(data.total_pages);\n        setSearchQuery(query);\n      })\n      .catch(error => {\n        console.log('Error:', error);\n      });\n\n    return () => {\n      controller.abort();\n    };\n  }, [query, page, searchQuery]);\n\n  const handleSubmitForm = query => {\n    setPage(1);\n    settotal(0);\n    setSearchParams(query.movieSearch !=='' ? { query: query.movieSearch }: {} )\n  };\n\n  const handleLoadMoreButton = () => {\n    setPage(prevState => prevState + 1);\n  };\n  console.log('KWAK');\n  return (\n    <>\n      <SearchForm initialSearchValue={query} onSubmit={handleSubmitForm} />\n      {movies.length > 0 && (\n        <>\n          <MovieGallery movies={movies} state={{ from: location }} />\n          {total !== page && <LoadMoreButton onClick={handleLoadMoreButton} />}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["onClick","type","KEY","axios","getTrendsOfMovies","page","signal","responce","data","getMoviesSearch","query","response","getMovieDetails","id","getMovieCredits","cast","getMovieRewiews","results","schema","Yup","shape","movieSearch","min","max","required","SearchForm","onSubmit","initialSearchValue","initialValues","validatorSchema","errors","touched","name","propType","PropTypes","MovieGallery","movies","state","map","movie","title","to","useState","setPage","useSearchParams","searchParams","setSearchParams","setMovies","total","settotal","searchQuery","setSearchQuery","get","location","useLocation","useEffect","controller","AbortController","then","prevState","total_pages","catch","error","console","log","abort","length","from","LoadMoreButton"],"sourceRoot":""}