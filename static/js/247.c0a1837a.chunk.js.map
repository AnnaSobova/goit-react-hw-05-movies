{"version":3,"file":"static/js/247.c0a1837a.chunk.js","mappings":"sOAIaA,EAAM,WACf,IAAMC,GAASC,EAAAA,EAAAA,MAATD,QACN,GAAsBE,EAAAA,EAAAA,UAAS,IAA/B,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA2BF,EAAAA,EAAAA,WAAS,GAApC,eAAOG,EAAP,KAAeC,EAAf,KAOA,OANAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAgBR,GACfS,MAAK,SAAAC,GAAM,OAAEN,EAAQM,EAAV,IACXC,QAAQL,GAAU,GACtB,GAAC,CAACN,KAGC,8BACCK,IACG,iCACA,iCACA,wBACEF,EAAKS,KAAI,SAAAC,GACP,IAAMC,EAAiCD,EAAjCC,GAAGC,EAA8BF,EAA9BE,KAAKC,EAAyBH,EAAzBG,aAAaC,EAAYJ,EAAZI,UACrBC,EAAQ,yCAAoCF,GAClD,OACI,0BACKA,IACG,gBAAKG,IAAKD,EAAUE,MAAO,MAAMC,IAAKN,KAE1C,mCAAWA,MACX,sCAAcE,OALTH,EAQf,UAMb,C,mMCpCKQ,EAAM,mCAEZC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,WAAMC,GAAN,uFACNF,EAAAA,EAAAA,IAAA,sCACYD,EADZ,iBACwBG,IAFlB,cACvBC,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOjBC,EAAe,mCAAG,WAAOH,EAAMI,GAAb,uFACJN,EAAAA,EAAAA,IAAA,+BACGD,EADH,kBACgBO,EADhB,iBAC8BJ,IAF1B,cACrBK,EADqB,yBAIpBA,EAASH,MAJW,2CAAH,wDAOfI,EAAe,mCAAG,WAAMjB,GAAN,uFACJS,EAAAA,EAAAA,IAAA,gBACVT,EADU,oBACIQ,EADJ,oBADI,cACrBI,EADqB,yBAIrBA,GAJqB,2CAAH,sDAOdlB,EAAe,mCAAG,WAAMM,GAAN,uFACLS,EAAAA,EAAAA,IAAA,iBACTT,EADS,4BACaQ,EADb,oBADK,cACtBI,EADsB,yBAIrBA,EAASC,KAAKxB,MAJO,2CAAH,sDAOhB6B,EAAe,mCAAG,WAAMlB,GAAN,uFACJS,EAAAA,EAAAA,IAAA,gBACZT,EADY,4BACUQ,EADV,2BADI,cACrBQ,EADqB,yBAIpBA,EAASH,KAAKM,SAJM,2CAAH,qD","sources":["components/Cast/Cast.jsx","components/services/getApi.jsx"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport {getMovieCredits} from '../services/getApi';\nimport {useState, useEffect} from 'react';\n\nexport const Cast =()=>{\n    const{movieId}=useParams();\n    const [cast, setCast]=useState([]);\n    const [isLoad, setIsLoad]= useState(false);\n    useEffect(()=>{\n        getMovieCredits(movieId)\n        .then(result=>setCast(result))\n        .finally(setIsLoad(true));\n    },[movieId]);\n\n    return(\n        <>\n        {isLoad&&(\n            <>\n            <p>Cast</p>\n            <ul>\n             {cast.map(actor=>{\n                const{id,name,profile_path,character}= actor;\n                const imageURL =`https://image.tmdb.org/t/p/w500${profile_path}`;\n                return(\n                    <li key={id}>\n                        {profile_path&&(\n                            <img src={imageURL} width= \"100\" alt={name}/>\n                        )}\n                        <p> Name: {name}</p>\n                        <p>Character:{character}</p>\n                    </li>\n                );\n             })}\n            </ul>\n            </>\n        )}\n        </>\n    );\n};","import axios from \"axios\";\n\nconst KEY = '3fcb05b829685e6a45bc9aa7307d9bc9';\n\naxios.defaults.baseURL = \"https://www.themoviedb.org/3\";\n\nexport const getTrendsOfMovies = async page=>{\n    const responce = await axios.get(\n        `/trending/movie/day?api_key=${KEY}&page=${page}`\n    );\n    return responce.data \n};\n\nexport const getMoviesSearch = async (page, query) => {\n    const response = await axios.get(\n      `search/movie?api_key=${KEY}&query=${query}&page=${page}`\n    );\n    return response.data;\n  };\n\nexport const getMovieDetails = async id=>{\n    const responce = await axios.get(\n        `movie/${id}?api_key=${KEY}&language=en-US`\n    );\n   return responce;\n}\n\nexport const  getMovieCredits = async id=>{\n    const responce = await axios.get(\n        `/movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n    return responce.data.cast;\n};\n\nexport const getMovieRewiews = async id => {\n    const response = await axios.get(\n      `movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n  };\n"],"names":["Cast","movieId","useParams","useState","cast","setCast","isLoad","setIsLoad","useEffect","getMovieCredits","then","result","finally","map","actor","id","name","profile_path","character","imageURL","src","width","alt","KEY","axios","getTrendsOfMovies","page","responce","data","getMoviesSearch","query","response","getMovieDetails","getMovieRewiews","results"],"sourceRoot":""}